# chrono@2018
# sudo /opt/nginx/sbin/nginx -c `pwd`/nginx.conf
# sudo gdb --args /opt/nginx/sbin/nginx -c `pwd`/nginx.conf

master_process off;
daemon off;

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

# debug
#debug_points stop;
#debug_points abort;

# core dupm config
#worker_rlimit_core 1000m;
#working_directory /tmp/;

google_perftools_profiles /tmp/ngx.perf;

thread_pool default threads=1;

events {
    worker_connections  1024;
}

stream {
    # nc 127.1 700
    server {
        listen 700;
        ndg_hello on;
        return "hello stream\n";
    }

    # nc 127.1 709
    server {
        listen 709;
        ndg_discard_timeout 10s;
        ndg_discard;
    }

    # nc 127.1 737
    server {
        listen 737;
        ndg_time;
    }

    # nc 127.1 707
    server {
        listen 707;
        preread_buffer_size 1k;
        ndg_echo;
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    keepalive_timeout  60;

    upstream backend {
        ndg_balance;
        server 127.0.0.1:707;
        server 127.0.0.1:737;
    }

    #main server
    server {
        listen       80;
        server_name  localhost;

        #access_log  logs/host.access.log  main;

        # curl 127.1/hello -v
        location /hello {
            ndg_hello on;

            ndg_echo "hello nginx\n";
            #return 200 "hello nginx\n";
        }

        # curl 127.1/basic -v
        location /basic {
            ndg_basic on;

            ndg_echo "basic nginx\n";
            #return 200 "basic nginx\n";
        }

        # curl 127.1/advance -v
        location /advance {
            ndg_advance on;

            ndg_echo "advance nginx\n";
            #return 200 "advance nginx\n";
        }

        # curl 127.1/echo -v
        location /echo {
            ndg_echo "hello echo\n";
        }

        # curl 127.1/filter -v
        location /filter {
            ndg_header x-name   chrono;
            ndg_header x-value  trigger;
            ndg_footer  "ocarina of time\n";

            ndg_echo "hello filter\n";
        }

        # curl 127.1/upstream?xxx -v
        location /upstream {
            ndg_upstream_pass backend;
        }

        # for subrequest test
        location = /allow {
            internal;
            return 200 "ok";
        }

        location = /deny {
            internal;
            return 403 "fibidden";
        }

        # curl 127.1/subrequest -v
        location /subrequest {
            ndg_subrequest "/allow";
            #ndg_subrequest "/deny";
            ndg_echo "hello subreqeust\n";
        }

        # curl 127.1/variable -v
        location /variable {
            set $hello_var "hello var";
            ndg_variable on;    #enable log var

            ndg_echo "hello var\n";
        }

        # curl 127.1/complex -v
        location /complex {
            #ndg_complex_value "a=$server_addr&b=$remote_addr";
            ndg_complex_value "hello nginx $request_method from $server_addr";

            ndg_echo "hello complex\n";
        }

        # curl 127.1/thread -v
        location /thread {
            ndg_thread default;
        }

        # curl 127.1/debug -v
        location /debug {
            error_log  logs/debug.log debug_http;
            ndg_debug on;
            ndg_echo "hello debug\n";
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

    }

}
