<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#f8f8f8" offset="5%" />
		<stop stop-color="#e8e8e8" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="533" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="533" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (2,879,980 samples, 99.99%)</title><rect x="10.2" y="453" width="1179.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_destroy_pool (4,947 samples, 0.17%)</title><rect x="281.0" y="213" width="2.1" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text text-anchor="" x="284.05" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>epoll_wait (538,488 samples, 18.70%)</title><rect x="10.7" y="389" width="220.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text text-anchor="" x="13.74" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >epoll_wait</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_core_run_phases (2,288,721 samples, 79.46%)</title><rect x="251.7" y="309" width="937.6" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text text-anchor="" x="254.71" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_core_run_phases</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_gzip_header_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="149" width="1.0" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_log_variable (3,930 samples, 0.14%)</title><rect x="283.1" y="181" width="1.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text text-anchor="" x="286.09" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>recv (1,448 samples, 0.05%)</title><rect x="1189.4" y="357" width="0.6" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text text-anchor="" x="1192.38" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_process_request_headers (2,305,832 samples, 80.05%)</title><rect x="244.7" y="357" width="944.7" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text text-anchor="" x="247.73" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_process_request_headers</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_output_chain (2,164,915 samples, 75.16%)</title><rect x="301.3" y="213" width="886.9" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text text-anchor="" x="304.35" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_output_chain</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_header_filter (1,046 samples, 0.04%)</title><rect x="1188.9" y="101" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text text-anchor="" x="1191.86" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_ssi_body_filter (2,164,837 samples, 75.16%)</title><rect x="301.4" y="149" width="886.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text text-anchor="" x="304.38" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_ssi_body_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_init (362 samples, 0.01%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_linux_sendfile_chain (2,164,303 samples, 75.14%)</title><rect x="301.6" y="69" width="886.6" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text text-anchor="" x="304.60" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_linux_sendfile_chain</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_handle_read_event (11,246 samples, 0.39%)</title><rect x="236.7" y="357" width="4.6" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text text-anchor="" x="239.66" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_charset_body_filter (2,164,867 samples, 75.16%)</title><rect x="301.4" y="165" width="886.8" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text text-anchor="" x="304.37" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_charset_body_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_ZN14ProfileHandler13SignalHandlerEiP9siginfo_tPv (362 samples, 0.01%)</title><rect x="10.0" y="469" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cfree@GLIBC_2.2.5 (4,934 samples, 0.17%)</title><rect x="281.1" y="197" width="2.0" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text text-anchor="" x="284.05" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_writev (2,164,272 samples, 75.14%)</title><rect x="301.6" y="53" width="886.6" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text text-anchor="" x="304.61" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_writev</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_chunked_header_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="117" width="1.0" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_close_connection (71,590 samples, 2.49%)</title><rect x="251.7" y="229" width="29.3" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text text-anchor="" x="254.72" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ng..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_write_fd (33,196 samples, 1.15%)</title><rect x="287.2" y="165" width="13.6" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text text-anchor="" x="290.16" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_core_content_phase (2,288,600 samples, 79.46%)</title><rect x="251.7" y="293" width="937.6" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text text-anchor="" x="254.72" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_core_content_phase</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (2,879,980 samples, 99.99%)</title><rect x="10.2" y="469" width="1179.8" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_not_modified_header_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="245" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_gzip_body_filter (2,164,837 samples, 75.16%)</title><rect x="301.4" y="117" width="886.8" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text text-anchor="" x="304.38" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_gzip_body_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_wait_request_handler (2,310,380 samples, 80.21%)</title><rect x="243.5" y="389" width="946.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text text-anchor="" x="246.48" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_wait_request_handler</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_vslprintf (5,387 samples, 0.19%)</title><rect x="241.3" y="341" width="2.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text text-anchor="" x="244.27" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_chunked_body_filter (2,164,837 samples, 75.16%)</title><rect x="301.4" y="101" width="886.8" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text text-anchor="" x="304.38" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_chunked_body_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_ndg_header_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="229" width="1.0" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_trailers_filter (2,164,867 samples, 75.16%)</title><rect x="301.4" y="181" width="886.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text text-anchor="" x="304.37" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_trailers_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>writev (2,151,042 samples, 74.68%)</title><rect x="307.0" y="37" width="881.2" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text text-anchor="" x="310.03" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >writev</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_log_request (43,158 samples, 1.50%)</title><rect x="283.1" y="213" width="17.7" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text text-anchor="" x="286.08" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_init_connection (12,569 samples, 0.44%)</title><rect x="236.1" y="373" width="5.2" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text text-anchor="" x="239.12" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_start (2,879,980 samples, 99.99%)</title><rect x="10.2" y="485" width="1179.8" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__close (71,073 samples, 2.47%)</title><rect x="251.9" y="197" width="29.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text text-anchor="" x="254.92" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_Ux86_64_getcontext (362 samples, 0.01%)</title><rect x="10.0" y="373" width="0.2" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_epoll_add_event (11,246 samples, 0.39%)</title><rect x="236.7" y="341" width="4.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text text-anchor="" x="239.66" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_output_filter (2,166,332 samples, 75.21%)</title><rect x="300.8" y="261" width="887.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text text-anchor="" x="303.77" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_output_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_close_connection (71,573 samples, 2.48%)</title><rect x="251.7" y="213" width="29.3" height="15.0" fill="rgb(61,175,175)" rx="2" ry="2" />
<text text-anchor="" x="254.72" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ng..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_charset_header_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="181" width="1.0" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_process_request (2,288,721 samples, 79.46%)</title><rect x="251.7" y="341" width="937.6" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text text-anchor="" x="254.71" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_process_request</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>accept4 (10,912 samples, 0.38%)</title><rect x="231.6" y="373" width="4.5" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text text-anchor="" x="234.64" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_finalize_connection (119,695 samples, 4.16%)</title><rect x="251.7" y="261" width="49.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text text-anchor="" x="254.72" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_ssi_header_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="165" width="1.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_Z24GetStackTraceWithContextPPviiPKv (362 samples, 0.01%)</title><rect x="10.0" y="437" width="0.2" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_headers_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="213" width="1.0" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_close_request (119,695 samples, 4.16%)</title><rect x="251.7" y="245" width="49.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text text-anchor="" x="254.72" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_parse_header_line (5,311 samples, 0.18%)</title><rect x="249.5" y="341" width="2.2" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text text-anchor="" x="252.53" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_process_events_and_timers (2,878,562 samples, 99.94%)</title><rect x="10.7" y="421" width="1179.3" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text text-anchor="" x="13.74" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_process_events_and_timers</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>write (33,196 samples, 1.15%)</title><rect x="287.2" y="149" width="13.6" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text text-anchor="" x="290.16" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_single_process_cycle (2,879,980 samples, 99.99%)</title><rect x="10.2" y="437" width="1179.8" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text text-anchor="" x="13.16" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_single_process_cycle</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>epoll_ctl (11,246 samples, 0.39%)</title><rect x="236.7" y="325" width="4.6" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text text-anchor="" x="239.66" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_sock_ntop (5,387 samples, 0.19%)</title><rect x="241.3" y="373" width="2.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text text-anchor="" x="244.27" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_log_handler (43,150 samples, 1.50%)</title><rect x="283.1" y="197" width="17.7" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text text-anchor="" x="286.08" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_ULx86_64_get_proc_info (362 samples, 0.01%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_ndg_echo_handler (2,168,905 samples, 75.30%)</title><rect x="300.8" y="277" width="888.5" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text text-anchor="" x="303.76" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_ndg_echo_handler</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_send_header (2,548 samples, 0.09%)</title><rect x="1188.2" y="261" width="1.1" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (2,880,361 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_Ux86_64_getcontext (362 samples, 0.01%)</title><rect x="10.0" y="389" width="0.2" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_range_body_filter (2,166,332 samples, 75.21%)</title><rect x="300.8" y="245" width="887.4" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text text-anchor="" x="303.77" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_range_body_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_unix_recv (1,448 samples, 0.05%)</title><rect x="1189.4" y="373" width="0.6" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text text-anchor="" x="1192.38" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_ULx86_64_step (362 samples, 0.01%)</title><rect x="10.0" y="405" width="0.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_free_request (48,105 samples, 1.67%)</title><rect x="281.0" y="229" width="19.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text text-anchor="" x="284.05" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_ULx86_64_get_save_loc (362 samples, 0.01%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_log_variable_getlen (5,426 samples, 0.19%)</title><rect x="284.7" y="181" width="2.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text text-anchor="" x="287.70" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_log_write (33,769 samples, 1.17%)</title><rect x="286.9" y="181" width="13.9" height="15.0" fill="rgb(66,179,179)" rx="2" ry="2" />
<text text-anchor="" x="289.92" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_postpone_filter (2,164,837 samples, 75.16%)</title><rect x="301.4" y="133" width="886.8" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text text-anchor="" x="304.38" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_postpone_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_handler (2,288,721 samples, 79.46%)</title><rect x="251.7" y="325" width="937.6" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text text-anchor="" x="254.71" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_handler</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_vslprintf (1,009 samples, 0.04%)</title><rect x="1188.9" y="69" width="0.4" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text text-anchor="" x="1191.88" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_copy_filter (2,164,915 samples, 75.16%)</title><rect x="301.3" y="229" width="886.9" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text text-anchor="" x="304.35" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_copy_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_range_header_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="133" width="1.0" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__restore_rt (362 samples, 0.01%)</title><rect x="10.0" y="485" width="0.2" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_get_indexed_variable (3,930 samples, 0.14%)</title><rect x="283.1" y="165" width="1.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text text-anchor="" x="286.09" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_get_indexed_variable (5,426 samples, 0.19%)</title><rect x="284.7" y="165" width="2.2" height="15.0" fill="rgb(83,196,196)" rx="2" ry="2" />
<text text-anchor="" x="287.70" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_userid_filter (2,541 samples, 0.09%)</title><rect x="1188.3" y="197" width="1.0" height="15.0" fill="rgb(71,185,185)" rx="2" ry="2" />
<text text-anchor="" x="1191.25" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_ndg_body_filter (2,164,867 samples, 75.16%)</title><rect x="301.4" y="197" width="886.8" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text text-anchor="" x="304.37" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_ndg_body_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_write_filter (2,164,837 samples, 75.16%)</title><rect x="301.4" y="85" width="886.8" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text text-anchor="" x="304.38" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_write_filter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_sprintf (1,009 samples, 0.04%)</title><rect x="1188.9" y="85" width="0.4" height="15.0" fill="rgb(91,203,203)" rx="2" ry="2" />
<text text-anchor="" x="1191.88" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_ZN11ProfileData10FlushTableEv (362 samples, 0.01%)</title><rect x="10.0" y="421" width="0.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_Ux86_64_getcontext (362 samples, 0.01%)</title><rect x="10.0" y="357" width="0.2" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text text-anchor="" x="13.01" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_process_request_line (2,305,962 samples, 80.06%)</title><rect x="244.7" y="373" width="944.7" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text text-anchor="" x="247.69" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_http_process_request_line</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_epoll_process_events (2,878,530 samples, 99.94%)</title><rect x="10.7" y="405" width="1179.3" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text text-anchor="" x="13.74" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_epoll_process_events</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_snprintf (5,387 samples, 0.19%)</title><rect x="241.3" y="357" width="2.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text text-anchor="" x="244.27" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_http_finalize_request (119,695 samples, 4.16%)</title><rect x="251.7" y="277" width="49.1" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text text-anchor="" x="254.72" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ngx_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ngx_event_accept (29,628 samples, 1.03%)</title><rect x="231.3" y="389" width="12.2" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text text-anchor="" x="234.34" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
